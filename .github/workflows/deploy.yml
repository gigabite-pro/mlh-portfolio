name: Deploy

on:
    workflow_run:
        workflows: ["Run Tests"]
        branches: [main]
        types:
            - completed

jobs:
    deploy:
        name: "Deploy to VPS"
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            - name: Check Test Conclusion
              if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion != 'success' }}
              run: echo "Skipping deployment because tests failed." && exit 1

            - name: Configure SSH
              run: |
                  mkdir -p ~/.ssh
                  echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
                  chmod 600 ~/.ssh/deploy-key.pem
                  cat >> ~/.ssh/config <<END
                  Host my-vps
                    HostName $SSH_IP
                    User $SSH_USER
                    IdentityFile ~/.ssh/deploy-key.pem
                    StrictHostKeyChecking no
                  END
              env:
                  SSH_USER: ${{ secrets.SSH_USER }}
                  SSH_IP: ${{ secrets.SSH_IP }}
                  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Deploy site
              run: ssh my-vps '~/redeploy-site.sh'

            - name: Send Discord Notification
              run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"

            - name: Print Container Status
              run: ssh my-vps 'docker ps'

    failure-notification:
        name: "Notify Failure"
        runs-on: ubuntu-latest
        needs: deploy
        if: ${{ failure() }}
        steps:
            - name: Send Discord Notification on Failure
              run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"
